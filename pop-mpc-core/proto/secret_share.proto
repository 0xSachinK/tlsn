syntax = "proto2";

import "core.proto";

package core.secret_share;

message EncryptionKey {
    // Modulus
    required bytes n = 1;
    // Modulus ^ 2
    required bytes nn = 2;
}

message MasterStepOne {
    // Master's encrpytion key
    required EncryptionKey enc_key = 1;
    // E(x_q)
    required bytes e_x_q = 2;
    // E(-x_q)
    required bytes e_neg_x_q = 3;
    // E(y_q^2)
    required bytes e_y_q_pow_2 = 4;
    // E(-2y_q)
    required bytes e_neg_2_y_q = 5;
}

message MasterStepTwo {
    // E((T * M_T)^p-3 mod p)
    required bytes e_t_mod_pow = 1;
}

message MasterStepThree {
    // E(A * M_A * B * M_B)
    required bytes e_ab_masked = 1;
}

message SlaveStepOne {
    // N_A mod p
    required bytes n_a_mod_p = 1;
    // N_T mod p
    required bytes n_t_mod_p = 2;
    // E(A * M_A + N_A)
    required bytes e_a_masked = 3;
    // E(T * M_T + N_T)
    required bytes e_t_masked = 4;
}

message SlaveStepTwo {
    // N_B mod p
    required bytes n_b_mod_p = 1;
    // E(B * M_C + N_C)
    required bytes e_b_masked = 2;
}

message SlaveStepThree {
    // E(PMS + S_q)
    required bytes e_pms_masked = 1;
}